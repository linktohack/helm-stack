{{- $Values := .Values -}}
{{- $Release := .Release -}}
{{/* volumes */}}
{{- range $volName, $volValue := include "stack.helpers.volumes" (dict "Values" $Values) | fromYaml -}}
{{/* volumes: pv */}}
{{-   if and (not (get $volValue "external")) (ne (get $volValue "type") "emptyDir") -}}
{{-     if not (get $volValue "dynamic") -}}
{{-       $pv := include "stack.pv" (dict "volName" $volName "volValue" $volValue "Values" $Values "Release" $Release) | fromYaml -}}
{{-       $override := $Values | pluck "volumes" | first | default dict | pluck (get $volValue "originalName") | first | default dict | pluck "PV" | first | default dict }}
---
{{        include "stack.helpers.mergeDeepOverwrite" (list $pv $override) | fromYaml | pluck "data" | first | toYaml -}}
{{-     end -}}
{{/* volumes: pvc */}}
{{-     if or (ne (get $volValue "deploymentKind") "StatefulSet") (not (get $volValue "dynamic")) -}}
{{-       $pvc := include "stack.pvc" (dict "volName" $volName "volValue" $volValue) | fromYaml -}}
{{-       $override := $Values | pluck "volumes" | first | default dict | pluck (get $volValue "originalName") | first | default dict | pluck "PVC" | first | default dict }}
---
{{        include "stack.helpers.mergeDeepOverwrite" (list $pvc $override) | fromYaml | pluck "data" | first | toYaml -}}
{{-     end -}}
{{-   end -}}
{{- end -}}
{{/* volumes: end */}}
{{/* configs */}}
{{- $configs := include "stack.helpers.configs" (dict "Release" .Release "configs" $Values.configs) | fromYaml }}
{{- range $name, $items := $configs.byName }}
---
{{   include "stack.configMap" (dict "name" $name "items" $items) }}
{{- end }}
{{/* configs: end */}}
{{/* secrets */}}
{{- $secrets := include "stack.helpers.secrets" (dict "Release" .Release "secrets" $Values.secrets) | fromYaml }}
{{- range $name, $items := $secrets.byName }}
---
{{    include "stack.secret" (dict "name" $name "items" $items) }}
{{- end }}
{{/* secrets: end */}}
{{/* services */}}
{{- range $name, $service:= .Values.services }}
{{/* services: clusterIP */}}
{{-   $clusterIP := include "stack.service.clusterIP" (dict "name" $name "service" $service "Values" $Values "Release" $Release) | fromYaml -}}
{{-   $override := $service | pluck "ClusterIP" | first | default dict -}}
{{-   if $clusterIP }}
---
{{      include "stack.helpers.mergeDeepOverwrite" (list $clusterIP $override) | fromYaml | pluck "data" | first | toYaml -}}
{{-   end }}
{{/* services: nodePort */}}
{{-   $nodePort := include "stack.service.nodePort" (dict "name" $name "service" $service "Values" $Values "Release" $Release) | fromYaml -}}
{{-   $override := $service | pluck "NodePort" | first | default dict -}}
{{-   if $nodePort }}
---
{{       include "stack.helpers.mergeDeepOverwrite" (list $nodePort $override) | fromYaml | pluck "data" | first | toYaml -}}
{{-   end }}
{{/* services: loadBalancer */}}
{{-   $ports := include "stack.helpers.normalizePorts" $service.ports | fromYaml -}}
{{-   range $protocol, $ports := pick $ports "tcp" "udp" -}}
{{-     if $ports }}
{{-       $loadBalancer := include "stack.service.loadBalancer" (dict "name" $name "protocol" $protocol "ports" $ports) | fromYaml -}}
{{-       $override := $service | pluck "LoadBalancer" | first | default dict | pluck $protocol | first | default dict -}}
{{-       if $loadBalancer }}
---
{{          include "stack.helpers.mergeDeepOverwrite" (list $loadBalancer $override) | fromYaml | pluck "data" | first | toYaml -}}
{{-       end -}}
{{-     end -}}
{{-   end -}}
{{/* services: ingress */}}
{{-   range $segment, $ingressValue := include "stack.helpers.ingresses" (dict "name" $name "service" $service "Values" $Values "Release" $Release) | fromYaml -}}
{{-     if and (get $ingressValue "hosts") (get $ingressValue "port") -}}
{{-       $ingress := include "stack.ingress" (dict "name" $name "segment" $segment "ingress" $ingressValue) | fromYaml -}}
{{-       $override := $service | pluck "Ingress" | first | default dict | pluck $segment | first | default dict }}
---
{{        include "stack.helpers.mergeDeepOverwrite" (list $ingress $override) | fromYaml | pluck "data" | first | toYaml -}}
{{-     end -}}
{{-     if get $ingressValue "auth" -}}
{{-       $auth := include "stack.ingress.auth"  (dict "name" $name "segment" $segment "ingress" $ingressValue) | fromYaml -}}
{{-       $override := $service | pluck "Auth" | first | default dict | pluck $segment | first | default dict }}
---
{{        include "stack.helpers.mergeDeepOverwrite" (list $auth $override) | fromYaml | pluck "data" | first | toYaml -}}
{{-     end -}}
{{-   end }}
{{/* services: deployment */}}
{{-   $kind := include "stack.helpers.deploymentKind" $service -}}
{{-   $deployment := include "stack.deployment" (dict "name" $name "kind" $kind "service" $service "configs" $configs.byKey "secrets" $secrets.byKey "Values" $Values "Release" $Release) | fromYaml -}}
{{-   $override := $service | pluck $kind | first | default dict -}}
{{/* $override | toYaml | fail */}}
---
{{    include "stack.helpers.mergeDeepOverwrite" (list $deployment $override) | fromYaml | pluck "data" | first | toYaml -}}
{{- end -}}
{{/* services: end */}}
{{/* Raw */}}
{{- range $raw := .Values.Raw }}
---
{{ $raw | toYaml -}}
{{- end -}}
{{/* Raw: end */}}
