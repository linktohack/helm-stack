---
# Source: stack/templates/stack.yml
apiVersion: v1
kind: Secret
metadata:
  name: redmine-basic-auth
type: Opaque
data:
  auth: YWRtaW46JGFwcjEkbnVwYVdaNlckZmwyWFFOYlo2ZmFOMnhwVFlaNzMvLw==
---
# Source: stack/templates/stack.yml
apiVersion: v1
kind: Service
metadata:
  name: "redmine"
spec:
  type: ClusterIP
  ports:
    - name: "clusterip-3000"
      port: 3000
      targetPort: 3000
  selector:
    service: "redmine"
---
# Source: stack/templates/stack.yml
---
apiVersion: v1
kind: Service
metadata:
  name: "db"
spec:
  type: ClusterIP
  ports:
    - name: "clusterip-3306"
      port: 3306
      targetPort: 3306
  selector:
    service: "db"
---
# Source: stack/templates/stack.yml
---
apiVersion: v1
kind: Service
metadata:
  name: "db-loadbalancer-tcp"
spec:
  type: LoadBalancer
  ports:
    - name: "loadbalancer-3306-tcp"
      protocol: "TCP"
      port: 3306
      targetPort: 3306
  selector:
    service: "db"
---
# Source: stack/templates/stack.yml
apiVersion: apps/v1
kind: Deployment 
metadata:
  name: "redmine"
spec:
  replicas: 1
  selector:
    matchLabels:
      service: "redmine"
  template:
    metadata:
      labels:
        service: "redmine"
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions: 
                - key: node-role.kubernetes.io/master
                  operator: In
                  values:
                  - "true"
      containers:
        - name: "redmine"
          image: "redmine"
          volumeMounts:
            - mountPath: "/usr/src/redmine/config/configuration.yml"
              name: "redmine-0"
            - mountPath: "/usr/src/redmine/files"
              name: "redmine-1"
      
      volumes:
        - name: "redmine-0"
          hostPath:
            path: "./config/configuration.yml"
        - name: "redmine-1"
          hostPath:
            path: "./files"
---
# Source: stack/templates/stack.yml
---
apiVersion: apps/v1
kind: Deployment 
metadata:
  name: "db"
spec:
  replicas: 1
  selector:
    matchLabels:
      service: "db"
  template:
    metadata:
      labels:
        service: "db"
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions: 
                - key: node-role.kubernetes.io/master
                  operator: In
                  values:
                  - "true"
      containers:
        - name: "db"
          image: "mysql:5.7"
          volumeMounts:
            - mountPath: "/var/lib/mysql"
              name: "db-0"
      
      volumes:
        - name: "db-0"
          hostPath:
            path: "/root/data/com-linktohack-redmine/mysql"
---
# Source: stack/templates/stack.yml
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: "redmine"
  annotations:
    ingress.kubernetes.io/auth-type: basic
    ingress.kubernetes.io/auth-realm: traefik
    ingress.kubernetes.io/auth-secret: "redmine-basic-auth"
    kubernetes.io/ingress.class: traefik
    ingress.kubernetes.io/custom-response-headers: "Access-Control-Allow-Origin:*"
    ingress.kubernetes.io/ssl-redirect: "true"
    traefik.ingress.kubernetes.io/redirect-entry-point: "https"
spec:
  rules:
    - host: "redmine.kube.linktohack.com"
      http:
        paths:
          - path: "/"
            backend:
              serviceName: "redmine"
              servicePort: "clusterip-3000"
