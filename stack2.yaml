---
# Source: stack/templates/stack.yml
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: "com-linktohack-ipsec-config"
spec:
  claimRef:
    namespace: com-linktohack-ipsec
    name: "config"
  persistentVolumeReclaimPolicy: Delete
  accessModes:
    - ReadWriteOnce
  capacity:
    storage: 10Gi
  nfs:
    server: "192.168.1.1"
    path: "/root/data/com-linktohack-openvpn3"
---
# Source: stack/templates/stack.yml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: "config"
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: "manual"
  resources:
    requests:
      storage: "10Gi"
---
# Source: stack/templates/stack.yml
apiVersion: v1
kind: Service
metadata:
  name: "openvpn-as-loadbalancer-udp"
spec:
  type: LoadBalancer
  ports:
    - name: "loadbalancer-1194-udp"
      protocol: "UDP"
      port: 1194
      targetPort: 1194
  selector:
    service: "openvpn-as"
---
# Source: stack/templates/stack.yml
apiVersion: v1
kind: Service
metadata:
  name: "openvpn-as"
spec:
  type: ClusterIP
  ports:
    - name: "clusterip-9443"
      port: 9443
      targetPort: 9443
  selector:
    service: "openvpn-as"
---
# Source: stack/templates/stack.yml
---
apiVersion: v1
kind: Service
metadata:
  name: "openvpn-as-loadbalancer-tcp"
spec:
  type: LoadBalancer
  ports:
    - name: "loadbalancer-943-tcp"
      protocol: "TCP"
      port: 943
      targetPort: 943
    - name: "loadbalancer-9443-tcp"
      protocol: "TCP"
      port: 9443
      targetPort: 9443
  selector:
    service: "openvpn-as"
---
# Source: stack/templates/stack.yml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: "openvpn-as"
spec:
  replicas: 1
  selector:
    matchLabels:
      service: "openvpn-as"
  template:
    metadata:
      labels:
        service: "openvpn-as"
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                - key: "node-role.kubernetes.io/master"
                  operator: "In"
                  values: 
                    - false
      containers:
        - name: "openvpn-as"
          image: "linuxserver/openvpn-as"
          securityContext:
            capabilities:
              add: 
                - NET_ADMIN
          volumeMounts:
            - mountPath: "/config"
              name: "config"
      
      volumes:
        - name: "config"
          persistentVolumeClaim:
            claimName: "config"
---
# Source: stack/templates/stack.yml
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: "openvpn-as"
  annotations:
    ingress.kubernetes.io/protocol: https
    kubernetes.io/ingress.class: traefik
    traefik.ingress.kubernetes.io/rule-type: PathPrefixStrip
    traefik.ingress.kubernetes.io/request-modifier: AddPrefix:/api
spec:
  rules:
    - host: "openvpn.kube.linktohack.com"
      http:
        paths:
          - path: "/v2"
            backend:
              serviceName: "openvpn-as"
              servicePort: "clusterip-9443"
          - path: "/v3"
            backend:
              serviceName: "openvpn-as"
              servicePort: "clusterip-9443"
    - host: "opvn.kube.linktohack.com"
      http:
        paths:
          - path: "/v2"
            backend:
              serviceName: "openvpn-as"
              servicePort: "clusterip-9443"
          - path: "/v3"
            backend:
              serviceName: "openvpn-as"
              servicePort: "clusterip-9443"
