---
# Source: stack/templates/stack.yml
apiVersion: v1
data:
  auth: Wm05dk9pUmhjSEl4SkU5R1J6TlllV0p3SkdOclREQkdTRVJCYTI5WVdVbHNTRGt1WTNselZEQUs=
kind: Secret
metadata:
  name: openvpn-as-default-basic-auth
type: Opaque
---
# Source: stack/templates/stack.yml
apiVersion: v1
kind: PersistentVolume
metadata:
  name: com-linktohack-ipsec-config
spec:
  accessModes:
  - ReadWriteMany
  capacity:
    storage: 1Gi
  claimRef:
    name: config
    namespace: com-linktohack-ipsec
  nfs:
    path: /root/data/com-linktohack-openvpn3
    server: 192.168.1.1
  persistentVolumeReclaimPolicy: Delete
---
# Source: stack/templates/stack.yml
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: config
spec:
  accessModes:
  - ReadWriteMany
  resources:
    requests:
      storage: 1Gi
  storageClassName: manual
---
# Source: stack/templates/stack.yml
apiVersion: v1
kind: Service
metadata:
  name: openvpn-as-loadbalancer-tcp
spec:
  ports:
  - name: loadbalancer-943
    port: 943
    protocol: TCP
    targetPort: 943
  - name: loadbalancer-9443
    port: 9443
    protocol: TCP
    targetPort: 9443
  selector:
    service: openvpn-as
  type: LoadBalancer
---
# Source: stack/templates/stack.yml
apiVersion: v1
kind: Service
metadata:
  name: openvpn-as-loadbalancer-udp
spec:
  ports:
  - name: loadbalancer-1194
    port: 1194
    protocol: UDP
    targetPort: 1194
  selector:
    service: openvpn-as
  type: LoadBalancer
---
# Source: stack/templates/stack.yml
apiVersion: v1
kind: Service
metadata:
  name: openvpn-as
spec:
  ports:
  - name: clusterip-9443
    port: 9443
    protocol: TCP
    targetPort: 9443
  selector:
    service: openvpn-as
  type: ClusterIP
---
# Source: stack/templates/stack.yml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: openvpn-as
spec:
  selector:
    matchLabels:
      service: openvpn-as
  template:
    metadata:
      labels:
        service: openvpn-as
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: node-role.kubernetes.io/master
                operator: In
                values:
                - "true"
      containers:
      - env:
        - name: INTERFACE
          value: eth0
        - name: PGID
          value: "1000"
        - name: PUID
          value: "1000"
        - name: TZ
          value: Europe/London
        image: linuxserver/openvpn-as
        name: openvpn-as
        securityContext:
          capabilities:
            add:
            - NET_ADMIN
        volumeMounts:
        - mountPath: /config
          name: config
      imagePullSecrets:
      - name: openvpn-as-basic-auth
      volumes:
      - name: config
        persistentVolumeClaim:
          claimName: config
---
# Source: stack/templates/stack.yml
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  annotations:
    ingress.kubernetes.io/auth-realm: traefik
    ingress.kubernetes.io/auth-secret: openvpn-as-basic-auth
    ingress.kubernetes.io/auth-type: basic
    ingress.kubernetes.io/protocol: https
    kubernetes.io/ingress.class: traefik
    traefik.ingress.kubernetes.io/request-modifier: AddPrefix:/api
    traefik.ingress.kubernetes.io/rule-type: PathPrefixStrip
  name: openvpn-as-default
spec:
  rules:
  - host: openvpn.kube.linktohack.com
    http:
      paths:
      - backend:
          serviceName: openvpn-as
          servicePort: clusterip-9443
        path: /v2
      - backend:
          serviceName: openvpn-as
          servicePort: clusterip-9443
        path: /v3
  - host: opvn.kube.linktohack.com
    http:
      paths:
      - backend:
          serviceName: openvpn-as
          servicePort: clusterip-9443
        path: /v2
      - backend:
          serviceName: openvpn-as
          servicePort: clusterip-9443
        path: /v3
